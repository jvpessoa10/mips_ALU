$comment
	File created using the following command:
		vcd file TestProject.msim.vcd -direction
$end
$date
	Sat Jun 15 16:23:16 2019
$end
$version
	ModelSim Version 10.3d
$end
$timescale
	1ps
$end

$scope module ALU_vlg_vec_tst $end
$var reg 4 ! ALUOp [3:0] $end
$var reg 32 " a [31:0] $end
$var reg 32 # b [31:0] $end
$var wire 1 $ ALUOut [31] $end
$var wire 1 % ALUOut [30] $end
$var wire 1 & ALUOut [29] $end
$var wire 1 ' ALUOut [28] $end
$var wire 1 ( ALUOut [27] $end
$var wire 1 ) ALUOut [26] $end
$var wire 1 * ALUOut [25] $end
$var wire 1 + ALUOut [24] $end
$var wire 1 , ALUOut [23] $end
$var wire 1 - ALUOut [22] $end
$var wire 1 . ALUOut [21] $end
$var wire 1 / ALUOut [20] $end
$var wire 1 0 ALUOut [19] $end
$var wire 1 1 ALUOut [18] $end
$var wire 1 2 ALUOut [17] $end
$var wire 1 3 ALUOut [16] $end
$var wire 1 4 ALUOut [15] $end
$var wire 1 5 ALUOut [14] $end
$var wire 1 6 ALUOut [13] $end
$var wire 1 7 ALUOut [12] $end
$var wire 1 8 ALUOut [11] $end
$var wire 1 9 ALUOut [10] $end
$var wire 1 : ALUOut [9] $end
$var wire 1 ; ALUOut [8] $end
$var wire 1 < ALUOut [7] $end
$var wire 1 = ALUOut [6] $end
$var wire 1 > ALUOut [5] $end
$var wire 1 ? ALUOut [4] $end
$var wire 1 @ ALUOut [3] $end
$var wire 1 A ALUOut [2] $end
$var wire 1 B ALUOut [1] $end
$var wire 1 C ALUOut [0] $end
$var wire 1 D overflow $end
$var wire 1 E sampler $end

$scope module i1 $end
$var wire 1 F gnd $end
$var wire 1 G vcc $end
$var wire 1 H unknown $end
$var tri1 1 I devclrn $end
$var tri1 1 J devpor $end
$var tri1 1 K devoe $end
$var wire 1 L ALUOut[0]~output_o $end
$var wire 1 M ALUOut[1]~output_o $end
$var wire 1 N ALUOut[2]~output_o $end
$var wire 1 O ALUOut[3]~output_o $end
$var wire 1 P ALUOut[4]~output_o $end
$var wire 1 Q ALUOut[5]~output_o $end
$var wire 1 R ALUOut[6]~output_o $end
$var wire 1 S ALUOut[7]~output_o $end
$var wire 1 T ALUOut[8]~output_o $end
$var wire 1 U ALUOut[9]~output_o $end
$var wire 1 V ALUOut[10]~output_o $end
$var wire 1 W ALUOut[11]~output_o $end
$var wire 1 X ALUOut[12]~output_o $end
$var wire 1 Y ALUOut[13]~output_o $end
$var wire 1 Z ALUOut[14]~output_o $end
$var wire 1 [ ALUOut[15]~output_o $end
$var wire 1 \ ALUOut[16]~output_o $end
$var wire 1 ] ALUOut[17]~output_o $end
$var wire 1 ^ ALUOut[18]~output_o $end
$var wire 1 _ ALUOut[19]~output_o $end
$var wire 1 ` ALUOut[20]~output_o $end
$var wire 1 a ALUOut[21]~output_o $end
$var wire 1 b ALUOut[22]~output_o $end
$var wire 1 c ALUOut[23]~output_o $end
$var wire 1 d ALUOut[24]~output_o $end
$var wire 1 e ALUOut[25]~output_o $end
$var wire 1 f ALUOut[26]~output_o $end
$var wire 1 g ALUOut[27]~output_o $end
$var wire 1 h ALUOut[28]~output_o $end
$var wire 1 i ALUOut[29]~output_o $end
$var wire 1 j ALUOut[30]~output_o $end
$var wire 1 k ALUOut[31]~output_o $end
$var wire 1 l overflow~output_o $end
$var wire 1 m b[0]~input_o $end
$var wire 1 n ALUOp[1]~input_o $end
$var wire 1 o ALUOp[0]~input_o $end
$var wire 1 p ALUOp[2]~input_o $end
$var wire 1 q ALUOp[3]~input_o $end
$var wire 1 r Add0~0_combout $end
$var wire 1 s Add0~1_combout $end
$var wire 1 t a[0]~input_o $end
$var wire 1 u Equal1~0_combout $end
$var wire 1 v Add0~3_cout $end
$var wire 1 w Add0~4_combout $end
$var wire 1 x Equal1~1_combout $end
$var wire 1 y ALUOut[0]$latch~combout $end
$var wire 1 z b[1]~input_o $end
$var wire 1 { Add0~6_combout $end
$var wire 1 | a[1]~input_o $end
$var wire 1 } Add0~5 $end
$var wire 1 ~ Add0~7_combout $end
$var wire 1 !! ALUOut[1]$latch~combout $end
$var wire 1 "! b[2]~input_o $end
$var wire 1 #! Add0~9_combout $end
$var wire 1 $! a[2]~input_o $end
$var wire 1 %! Add0~8 $end
$var wire 1 &! Add0~10_combout $end
$var wire 1 '! ALUOut[2]$latch~combout $end
$var wire 1 (! b[3]~input_o $end
$var wire 1 )! Add0~12_combout $end
$var wire 1 *! a[3]~input_o $end
$var wire 1 +! Add0~11 $end
$var wire 1 ,! Add0~13_combout $end
$var wire 1 -! ALUOut[3]$latch~combout $end
$var wire 1 .! b[4]~input_o $end
$var wire 1 /! Add0~15_combout $end
$var wire 1 0! a[4]~input_o $end
$var wire 1 1! Add0~14 $end
$var wire 1 2! Add0~16_combout $end
$var wire 1 3! ALUOut[4]$latch~combout $end
$var wire 1 4! b[5]~input_o $end
$var wire 1 5! Add0~18_combout $end
$var wire 1 6! a[5]~input_o $end
$var wire 1 7! Add0~17 $end
$var wire 1 8! Add0~19_combout $end
$var wire 1 9! ALUOut[5]$latch~combout $end
$var wire 1 :! b[6]~input_o $end
$var wire 1 ;! Add0~21_combout $end
$var wire 1 <! a[6]~input_o $end
$var wire 1 =! Add0~20 $end
$var wire 1 >! Add0~22_combout $end
$var wire 1 ?! ALUOut[6]$latch~combout $end
$var wire 1 @! b[7]~input_o $end
$var wire 1 A! Add0~24_combout $end
$var wire 1 B! a[7]~input_o $end
$var wire 1 C! Add0~23 $end
$var wire 1 D! Add0~25_combout $end
$var wire 1 E! ALUOut[7]$latch~combout $end
$var wire 1 F! b[8]~input_o $end
$var wire 1 G! Add0~27_combout $end
$var wire 1 H! a[8]~input_o $end
$var wire 1 I! Add0~26 $end
$var wire 1 J! Add0~28_combout $end
$var wire 1 K! ALUOut[8]$latch~combout $end
$var wire 1 L! b[9]~input_o $end
$var wire 1 M! Add0~30_combout $end
$var wire 1 N! a[9]~input_o $end
$var wire 1 O! Add0~29 $end
$var wire 1 P! Add0~31_combout $end
$var wire 1 Q! ALUOut[9]$latch~combout $end
$var wire 1 R! b[10]~input_o $end
$var wire 1 S! Add0~33_combout $end
$var wire 1 T! a[10]~input_o $end
$var wire 1 U! Add0~32 $end
$var wire 1 V! Add0~34_combout $end
$var wire 1 W! ALUOut[10]$latch~combout $end
$var wire 1 X! b[11]~input_o $end
$var wire 1 Y! Add0~36_combout $end
$var wire 1 Z! a[11]~input_o $end
$var wire 1 [! Add0~35 $end
$var wire 1 \! Add0~37_combout $end
$var wire 1 ]! ALUOut[11]$latch~combout $end
$var wire 1 ^! b[12]~input_o $end
$var wire 1 _! Add0~39_combout $end
$var wire 1 `! a[12]~input_o $end
$var wire 1 a! Add0~38 $end
$var wire 1 b! Add0~40_combout $end
$var wire 1 c! ALUOut[12]$latch~combout $end
$var wire 1 d! b[13]~input_o $end
$var wire 1 e! Add0~42_combout $end
$var wire 1 f! a[13]~input_o $end
$var wire 1 g! Add0~41 $end
$var wire 1 h! Add0~43_combout $end
$var wire 1 i! ALUOut[13]$latch~combout $end
$var wire 1 j! b[14]~input_o $end
$var wire 1 k! Add0~45_combout $end
$var wire 1 l! a[14]~input_o $end
$var wire 1 m! Add0~44 $end
$var wire 1 n! Add0~46_combout $end
$var wire 1 o! ALUOut[14]$latch~combout $end
$var wire 1 p! b[15]~input_o $end
$var wire 1 q! Add0~48_combout $end
$var wire 1 r! a[15]~input_o $end
$var wire 1 s! Add0~47 $end
$var wire 1 t! Add0~49_combout $end
$var wire 1 u! ALUOut[15]$latch~combout $end
$var wire 1 v! b[16]~input_o $end
$var wire 1 w! Add0~51_combout $end
$var wire 1 x! a[16]~input_o $end
$var wire 1 y! Add0~50 $end
$var wire 1 z! Add0~52_combout $end
$var wire 1 {! ALUOut[16]$latch~combout $end
$var wire 1 |! b[17]~input_o $end
$var wire 1 }! Add0~54_combout $end
$var wire 1 ~! a[17]~input_o $end
$var wire 1 !" Add0~53 $end
$var wire 1 "" Add0~55_combout $end
$var wire 1 #" ALUOut[17]$latch~combout $end
$var wire 1 $" b[18]~input_o $end
$var wire 1 %" Add0~57_combout $end
$var wire 1 &" a[18]~input_o $end
$var wire 1 '" Add0~56 $end
$var wire 1 (" Add0~58_combout $end
$var wire 1 )" ALUOut[18]$latch~combout $end
$var wire 1 *" b[19]~input_o $end
$var wire 1 +" Add0~60_combout $end
$var wire 1 ," a[19]~input_o $end
$var wire 1 -" Add0~59 $end
$var wire 1 ." Add0~61_combout $end
$var wire 1 /" ALUOut[19]$latch~combout $end
$var wire 1 0" b[20]~input_o $end
$var wire 1 1" Add0~63_combout $end
$var wire 1 2" a[20]~input_o $end
$var wire 1 3" Add0~62 $end
$var wire 1 4" Add0~64_combout $end
$var wire 1 5" ALUOut[20]$latch~combout $end
$var wire 1 6" b[21]~input_o $end
$var wire 1 7" Add0~66_combout $end
$var wire 1 8" a[21]~input_o $end
$var wire 1 9" Add0~65 $end
$var wire 1 :" Add0~67_combout $end
$var wire 1 ;" ALUOut[21]$latch~combout $end
$var wire 1 <" b[22]~input_o $end
$var wire 1 =" Add0~69_combout $end
$var wire 1 >" a[22]~input_o $end
$var wire 1 ?" Add0~68 $end
$var wire 1 @" Add0~70_combout $end
$var wire 1 A" ALUOut[22]$latch~combout $end
$var wire 1 B" b[23]~input_o $end
$var wire 1 C" Add0~72_combout $end
$var wire 1 D" a[23]~input_o $end
$var wire 1 E" Add0~71 $end
$var wire 1 F" Add0~73_combout $end
$var wire 1 G" ALUOut[23]$latch~combout $end
$var wire 1 H" b[24]~input_o $end
$var wire 1 I" Add0~75_combout $end
$var wire 1 J" a[24]~input_o $end
$var wire 1 K" Add0~74 $end
$var wire 1 L" Add0~76_combout $end
$var wire 1 M" ALUOut[24]$latch~combout $end
$var wire 1 N" b[25]~input_o $end
$var wire 1 O" Add0~78_combout $end
$var wire 1 P" a[25]~input_o $end
$var wire 1 Q" Add0~77 $end
$var wire 1 R" Add0~79_combout $end
$var wire 1 S" ALUOut[25]$latch~combout $end
$var wire 1 T" b[26]~input_o $end
$var wire 1 U" Add0~81_combout $end
$var wire 1 V" a[26]~input_o $end
$var wire 1 W" Add0~80 $end
$var wire 1 X" Add0~82_combout $end
$var wire 1 Y" ALUOut[26]$latch~combout $end
$var wire 1 Z" b[27]~input_o $end
$var wire 1 [" Add0~84_combout $end
$var wire 1 \" a[27]~input_o $end
$var wire 1 ]" Add0~83 $end
$var wire 1 ^" Add0~85_combout $end
$var wire 1 _" ALUOut[27]$latch~combout $end
$var wire 1 `" b[28]~input_o $end
$var wire 1 a" Add0~87_combout $end
$var wire 1 b" a[28]~input_o $end
$var wire 1 c" Add0~86 $end
$var wire 1 d" Add0~88_combout $end
$var wire 1 e" ALUOut[28]$latch~combout $end
$var wire 1 f" b[29]~input_o $end
$var wire 1 g" Add0~90_combout $end
$var wire 1 h" a[29]~input_o $end
$var wire 1 i" Add0~89 $end
$var wire 1 j" Add0~91_combout $end
$var wire 1 k" ALUOut[29]$latch~combout $end
$var wire 1 l" b[30]~input_o $end
$var wire 1 m" Add0~93_combout $end
$var wire 1 n" a[30]~input_o $end
$var wire 1 o" Add0~92 $end
$var wire 1 p" Add0~94_combout $end
$var wire 1 q" ALUOut[30]$latch~combout $end
$var wire 1 r" b[31]~input_o $end
$var wire 1 s" Add0~96_combout $end
$var wire 1 t" a[31]~input_o $end
$var wire 1 u" Add0~95 $end
$var wire 1 v" Add0~97_combout $end
$var wire 1 w" ALUOut[31]$latch~combout $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b1 !
b1 "
b1 #
0C
0B
0A
0@
0?
0>
0=
0<
0;
0:
09
08
07
06
05
04
03
02
01
00
0/
0.
0-
0,
0+
0*
0)
0(
0'
0&
0%
0$
0D
xE
0F
1G
xH
1I
1J
1K
0L
0M
0N
0O
0P
0Q
0R
0S
0T
0U
0V
0W
0X
0Y
0Z
0[
0\
0]
0^
0_
0`
0a
0b
0c
0d
0e
0f
0g
0h
0i
0j
0k
0l
1m
0n
1o
0p
0q
0r
0s
1t
1u
1v
0w
1x
0y
0z
1{
0|
0}
0~
0!!
0"!
1#!
0$!
1%!
0&!
0'!
0(!
1)!
0*!
0+!
0,!
0-!
0.!
1/!
00!
11!
02!
03!
04!
15!
06!
07!
08!
09!
0:!
1;!
0<!
1=!
0>!
0?!
0@!
1A!
0B!
0C!
0D!
0E!
0F!
1G!
0H!
1I!
0J!
0K!
0L!
1M!
0N!
0O!
0P!
0Q!
0R!
1S!
0T!
1U!
0V!
0W!
0X!
1Y!
0Z!
0[!
0\!
0]!
0^!
1_!
0`!
1a!
0b!
0c!
0d!
1e!
0f!
0g!
0h!
0i!
0j!
1k!
0l!
1m!
0n!
0o!
0p!
1q!
0r!
0s!
0t!
0u!
0v!
1w!
0x!
1y!
0z!
0{!
0|!
1}!
0~!
0!"
0""
0#"
0$"
1%"
0&"
1'"
0("
0)"
0*"
1+"
0,"
0-"
0."
0/"
00"
11"
02"
13"
04"
05"
06"
17"
08"
09"
0:"
0;"
0<"
1="
0>"
1?"
0@"
0A"
0B"
1C"
0D"
0E"
0F"
0G"
0H"
1I"
0J"
1K"
0L"
0M"
0N"
1O"
0P"
0Q"
0R"
0S"
0T"
1U"
0V"
1W"
0X"
0Y"
0Z"
1["
0\"
0]"
0^"
0_"
0`"
1a"
0b"
1c"
0d"
0e"
0f"
1g"
0h"
0i"
0j"
0k"
0l"
1m"
0n"
1o"
0p"
0q"
0r"
1s"
0t"
0u"
0v"
0w"
$end
#1000000
